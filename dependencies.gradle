ext {
    minSdkVersion = 14
    compileSdkVersion = 25
    targetSdkVersion = 23
    buildToolsVersion = '25.0.0'

    ci = 'true'.equals(System.getenv('CI'))
    run_in_idea = 'studio'.equalsIgnoreCase(System.getProperty('idea.executable'))

    //Android
    supportVersion = '25.0.1'
    supportAnnotations = "com.android.support:support-annotations:$supportVersion"
    supportV4CoreUi = "com.android.support:support-core-ui:$supportVersion"
    supportRecyclerView = "com.android.support:recyclerview-v7:$supportVersion"
    supportAppCompat = "com.android.support:appcompat-v7:$supportVersion"
    supportCardView = "com.android.support:cardview-v7:$supportVersion"
    supportDesign = "com.android.support:design:$supportVersion"
    supportLeanback = "com.android.support:leanback-v17:$supportVersion"
    supportMultiDex = 'com.android.support:multidex:1.0.0'

    supportTestEspresso = 'com.android.support.test.espresso:espresso-core:2.2.2'

    rxAndroid2 = 'io.reactivex.rxjava2:rxandroid:2.0.1'

    glide = 'com.github.bumptech.glide:glide:3.7.0'

    dagger2Version = '2.8'
    dagger2 = "com.google.dagger:dagger:$dagger2Version"
    dagger2Compiler = "com.google.dagger:dagger-compiler:$dagger2Version"

    rxpermissions2 = 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    leakcanaryVersion = '1.5'
    leakcanaryDebug = "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    leakcanaryRelease = "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"

    realmAnnotations = "io.realm:realm-annotations:2.2.1"

   jsr250 = 'javax.annotation:jsr250-api:1.0'

    rxlifecycle2Version = '2.0.1'
    rxlifecycle2 = "com.trello.rxlifecycle2:rxlifecycle:$rxlifecycle2Version"
    rxlifecycle2Android = "com.trello.rxlifecycle2:rxlifecycle-android:$rxlifecycle2Version"
    rxlifecycle2Components = "com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycle2Version"

    rxbinding2Version = '2.0.0'
    rxbinding2 = "com.jakewharton.rxbinding2:rxbinding:$rxbinding2Version"

    slf4jAndroid = 'org.slf4j:slf4j-android:1.7.25'

    //Java
    commonsLang3 = 'org.apache.commons:commons-lang3:3.5'
    commonsCodec = 'commons-codec:commons-codec:1.10'
    commonsIo = 'commons-io:commons-io:2.5'
    guava = 'com.google.guava:guava:20.0'
    gson = 'com.google.code.gson:gson:2.8.0'

    retrofit2 = 'com.squareup.retrofit2:retrofit:2.1.0'
    retrofit2GsonConverter = 'com.squareup.retrofit2:converter-gson:2.1.0'
    retrofit2Rxjava2Adapter = 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    okhttp3Logging = 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    jsoup = 'org.jsoup:jsoup:1.10.2'

    lombok = 'org.projectlombok:lombok:1.16.10'
    rxJava2 = 'io.reactivex.rxjava2:rxjava:2.0.1'
    junit = 'junit:junit:4.12'

    findbugs = 'com.google.code.findbugs:jsr305:3.0.1'

    jxl = 'net.sourceforge.jexcelapi:jxl:2.6.10'

    //Groovy
    groovy = 'org.codehaus.groovy:groovy-all:2.4.4'



    //Log
    androidLoggingLog4j  = 'de.mindpipe.android:android-logging-log4j:1.0.3'
    log4j = 'log4j:log4j:1.2.17'
    slf4jLog4j12 = 'org.slf4j:slf4j-log4j12:1.7.25'
}

subprojects { project ->
    project.configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support' && !details.requested.name.startsWith('multidex')) {
                    details.useVersion(rootProject.ext.supportVersion)
                }
            }
        }
    }
}
